/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/dto/EntitydeltaDTOService.java.e.vm
 */
package com.incloud.hcp.service.delta.impl;

import com.incloud.hcp.domain.MtrSector;
import com.incloud.hcp.service.delta.MtrSectorDeltaService;
import com.incloud.hcp.service.impl.MtrSectorServiceImpl;
import com.incloud.hcp.service.support.PageRequestByExample;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.ss.usermodel.Cell;
import org.springframework.data.domain.Example;
import org.springframework.data.domain.ExampleMatcher;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * A simple DTO Facility for MtrSector.
 */
@Service
@Transactional(propagation = Propagation.REQUIRED, rollbackFor = Exception.class)
public class MtrSectorDeltaServiceImpl extends MtrSectorServiceImpl implements MtrSectorDeltaService {

    /**************************/
    /* Metodos Personalizados */
    /**************************/

    /***********************/
    /* Metodos de Busqueda */
    /***********************/

    protected Sort setFindAll(Sort sort) {
        sort = Sort.by(
                new Sort.Order(Sort.Direction.ASC, "mtrSociedad.id"),
                new Sort.Order(Sort.Direction.ASC, "descripcion")
        );
        return sort;
    }

    protected Sort setFind(MtrSector req, ExampleMatcher matcher, Example<MtrSector> example, Sort sort) {
        sort = Sort.by(
                new Sort.Order(Sort.Direction.ASC, "mtrSociedad.id"),
                new Sort.Order(Sort.Direction.ASC, "descripcion")
        );
        return sort;
    }

    protected void setFindPaginated(PageRequestByExample<MtrSector> req, ExampleMatcher matcher, Example<MtrSector> example) {
        return;
    }

    /****************/
    /* METODOS CRUD */
    /****************/

    protected String setValidacionesPrevias(MtrSector bean) throws Exception {
        String mensaje = "";
        return mensaje;
    }

    protected MtrSector setCreate(MtrSector bean) throws Exception {
        return bean;
    }

    protected void setSave(MtrSector dto) throws Exception {
        return;
    }

    protected void setDelete(Integer id) throws Exception {

    }

    protected void setDeleteAll() throws Exception {

    }

    /************************/
    /* METODOS CRUD Masivos */
    /************************/

    protected MtrSector setUploadExcel(Cell currentCell, MtrSector mtrSector, int contador) throws Exception {
        mtrSector = super.setUploadExcel(currentCell, mtrSector, contador);
        return mtrSector;
    }

    protected String setSaveMasivo(MtrSector dto) throws Exception {
        return "";
    }

    protected List<MtrSector> setBeforeDeleteMasivo(List<MtrSector> listaDto) throws Exception {
        return listaDto;
    }

    protected void setAfterDeleteMasivo() throws Exception {
        return;
    }

    /*****************************/
    /* Metodos que generan Excel */
    /*****************************/

    protected void setDownloadExcelItem(MtrSector bean, HSSFRow dataRow) {

    }

    protected void setDownloadExcel(HSSFSheet sheet) {

    }

    /*****************/
    /* Otros Metodos */
    /*****************/

}
