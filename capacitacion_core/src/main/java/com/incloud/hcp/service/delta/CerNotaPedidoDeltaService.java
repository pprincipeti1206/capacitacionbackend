/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 *
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/dto/EntitydeltaDTO.java.e.vm
 */
package com.incloud.hcp.service.delta;

import com.incloud.hcp.domain.CerNotaPedido;
import com.incloud.hcp.domain.CerNotaPedidoAdjunto;
import com.incloud.hcp.domain.response.CerNotaPedidoResponse;
import com.incloud.hcp.service.CerNotaPedidoService;
import com.incloud.hcp.service.dto.*;
import com.incloud.hcp.service.support.PageResponse;
import org.apache.poi.xssf.streaming.SXSSFWorkbook;
import org.springframework.data.domain.PageRequest;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.util.List;

/**
 * Simple Interface for CerNotaPedido.
 */
public interface CerNotaPedidoDeltaService extends CerNotaPedidoService {

    CerNotaPedidoAdjunto agregarAdjuntoTemporal(MultipartFile file) throws Exception;

    String deleteAdjunto(String archivoID) throws Exception;

    CerNotaPedidoGrabarAdjuntoDto grabarListaAdjunto(CerNotaPedidoGrabarAdjuntoDto bean) throws Exception;

    CerNotaPedidoDto devuelveNotaPedido(Integer notaPedidoId) throws Exception;

    CerNotaPedidoValidarMontoDto validarMontoPendiente(Integer notaPedidoId) throws Exception;

    List<CerNotaPedido> findListaCrearCertificado() throws Exception;
    List<CertificadoNotaPedidoDetalleDto> listNotaPedidoAndDetails(String nroPedido);

    CerNotaPedido actualizaEstado(EstadoNotaPedidoDto estadoNotaPedidoDto) throws Exception;

    void enviarMailActualizarEstado(EstadoNotaPedidoDto estadoNotaPedidoDto) throws IOException;

    CerNotaPedidoIntermedioAprobarDto aprobarNotaPedido(Integer notaPedidoId) throws Exception;

    void enviarEmailAprobarAprobadores(CerNotaPedidoIntermedioAprobarDto bean) throws Exception;

    void enviarEmailRechazarAprobadores(EstadoNotaPedidoDto estadoNotaPedidoDto) throws Exception;

    SXSSFWorkbook downloadExcelporFiltro(CerNotaPedido cerNotaPedido) throws Exception;

    void actualizarNoVigente() throws Exception;


    PageResponse<CerNotaPedido> findCondicionProveedorPaginated(
            CerNotaPedidoResponse req,
            PageRequest pageRequest) throws Exception;

    List<CerNotaPedido> findProveedor(CerNotaPedido bean) throws Exception;


}
