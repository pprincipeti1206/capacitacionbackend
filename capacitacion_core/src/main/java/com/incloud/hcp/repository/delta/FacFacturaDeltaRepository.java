/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/repository/EntitydeltaRepository.java.e.vm
 */
package com.incloud.hcp.repository.delta;

import com.incloud.hcp.domain.FacFactura;
import com.incloud.hcp.repository.FacFacturaRepository;
import org.springframework.data.jpa.repository.Query;

import java.util.List;

public interface FacFacturaDeltaRepository extends FacFacturaRepository {

    @Query("select c from FacFactura c " +
            "where c.mtrProveedor.id = ?1 " +
            "and c.tipoFactura = ?2 " +
            "and c.serieFactura = ?3 " +
            "and c.numeroFactura = ?4")
    FacFactura verificarExisteNumeroDocumentoFactura(
            Integer idProveedor,
            String tipoDocumento,
            String serie,
            String numero);


    @Query(nativeQuery = true,
            value="select seq_correlativo_factura.nextval from dummy")
    Integer devuelveNextSecuencialCorrelativo();

    @Query("select c.id from FacFactura c where c.mtrEstado.id = ?1")
    List<Integer> devuelveIdFacturaPorEstado(Integer mtrEstadoId);

    @Query("select c from FacFactura c where c.numeroFacturaSap = ?1")
    List<FacFactura> devuelveFacturaPorNumeroFacturaSap(String numeroFactura);

    @Query("select c from FacFactura c where c.numeroFactura = ?1 and c.serieFactura = ?2 and c.tipoComprobanteFactura = ?3 and c.mtrProveedor.ruc =?4 and c.anioFacturaSap =?5")
    List<FacFactura> devuelveFacturaPorCodigoUnico(String numero, String serie, String tipoComprobante, String ruc, String annioFactura);
    @Query("select c from FacFactura c where c.mtrEstado.id = ?1")
    List<FacFactura> devuelveFacturaPorEstadoId(Integer idestado);





}
