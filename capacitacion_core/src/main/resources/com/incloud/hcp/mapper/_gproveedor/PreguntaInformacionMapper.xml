<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Project home: https://github.com/jaxio/celerio-angular-quickstart
 ! 
 ! Source code generated by Celerio, an Open Source code generator by Jaxio.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Source code: https://github.com/jaxio/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! This header can be customized in Celerio conf...
 ! Template pack-angular:src/main/java/mapper/EntityXMLMapper.xml.e.vm
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.incloud.hcp.mapper._gproveedor.PreguntaInformacionMapper">

<resultMap id="preguntaInformacionResultMap" type="com.incloud.hcp.domain._gproveedor.domain.PreguntaInformacion">
	<id property="id" jdbcType="INTEGER" column="id_pregunta_informacion" />
	<result property="descripcionPregunta" jdbcType="VARCHAR" column="descripcion_pregunta" />	
	<result property="orden" jdbcType="INTEGER" column="orden" />
	<result property="indRespuestaSiNo" jdbcType="INTEGER" column="ind_respuesta_si_no" />
</resultMap>


<select id="getPreguntaInformacion" parameterType="com.incloud.hcp.domain._gproveedor.domain.PreguntaInformacion" resultMap="preguntaInformacionResultMap">
	SELECT 
      id_pregunta_informacion , 
      descripcion_pregunta , 
      orden,
	  ind_respuesta_si_no
	FROM
	pregunta_informacion
	WHERE 1 = 1
	<if test="id != null ">
		AND id_pregunta_informacion = #{id, jdbcType=INTEGER}
	</if>	
	<if test="descripcionPregunta != null and descripcionPregunta != '' ">
		AND descripcion_pregunta = #{descripcionPregunta}
	</if>	
	<if test="orden != null ">
		AND orden = #{orden, jdbcType=INTEGER}
	</if>
	order by orden
</select>

<insert id="insertPreguntaInformacion" >
INSERT INTO  pregunta_informacion(
id_pregunta_informacion , 
descripcion_pregunta , 
orden 
)
VALUES
(
#{element.id} , 
#{element.descripcionPregunta} , 
#{element.orden} 
)

</insert>


<insert id="insertMapPreguntaInformacion" parameterType="java.util.Map" >
INSERT INTO  pregunta_informacion(
id_pregunta_informacion , 
descripcion_pregunta , 
orden 
)
(
<foreach collection="list" item="element" index="index" separator=" UNION ">  
SELECT
#{element.id} , 
#{element.descripcionPregunta} , 
#{element.orden} 
from dummy

</foreach>    
)

</insert>

<update id="updatePreguntaInformacion">
    UPDATE pregunta_informacion
    <set>
	<if test="descripcionPregunta != null and descripcionPregunta != '' ">
		descripcion_pregunta = #{descripcionPregunta},
	</if>	
	<if test="orden != null ">
		orden = #{orden, jdbcType=INTEGER},
	</if>	
    </set> 
	WHERE 
	  id_pregunta_informacion = #{id, jdbcType=INTEGER}	
</update>

<delete id="deletePreguntaInformacion">
    DELETE FROM pregunta_informacion
	WHERE 1 = 1
	<if test="id != null ">
		AND id_pregunta_informacion = #{id, jdbcType=INTEGER}
	</if>	
	<if test="descripcionPregunta != null and descripcionPregunta != '' ">
		AND descripcion_pregunta = #{descripcionPregunta}
	</if>	
	<if test="orden != null ">
		AND orden = #{orden, jdbcType=INTEGER}
	</if>	
</delete>

<delete id="deleteAll">
   DELETE FROM pregunta_informacion
</delete>



</mapper>