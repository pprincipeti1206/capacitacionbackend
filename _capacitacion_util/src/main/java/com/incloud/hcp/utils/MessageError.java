package com.incloud.hcp.utils;import org.apache.commons.lang.StringUtils;import java.util.List;import java.util.Objects;import java.util.Optional;public class MessageError {    // Mensaje de Id's    public static final void idInvalido(Object id){        if( Objects.isNull( id ) ) throw new RuntimeException("Id is null!");    }    //Mensaje de Listas    public static final void validateList(List<?> list, String listName){        StringBuilder st = new StringBuilder();        st.append("La lista ").append(listName);        if(list == null){            st.append(" es nula.");            throw new RuntimeException(st.toString());        }        if(list.size() == 0){            st.append( " no puede tener 0 filas." );            throw new RuntimeException( st.toString() );        }    }    // Valida Nulos    public static final void validaObject(Object obj, String objName){        if( !Optional.ofNullable(obj).isPresent() ){            StringBuilder s = new StringBuilder();            s.append("The input ").append(objName).append(" is null!");            throw new RuntimeException(s.toString());        }    }    public static final void validaCampoObligatorio(Object obj, String objName){        if( !Optional.ofNullable(obj).isPresent() ){            StringBuilder s = new StringBuilder();            s.append("La entrada ").append(objName).append(" es requerida!");            throw new RuntimeException(s.toString());        }    }    public static final void validaCampoObligatorioMessage(Object obj, String message){        if( Objects.isNull( obj ) ){            throw new RuntimeException( message );        }    }    //Valida Vacios    public static final void validateStringEmpty(String obj, String objName){        if( obj.trim().isEmpty() ){            StringBuilder s = new StringBuilder();            s.append("La entrada ").append(objName).append(" es requerida!");            throw new RuntimeException(s.toString());        }    }    public static final void validaCampoObligatorioNotEmpty(String obj, String objName){        if( !Optional.ofNullable(obj).isPresent() ){            StringBuilder s = new StringBuilder();            s.append("La entrada ").append(objName).append(" es requerida!");            throw new RuntimeException(s.toString());        }        if(StringUtils.isBlank( obj )){            StringBuilder s = new StringBuilder();            s.append("La entrada ").append(objName).append(" es requerida!");            throw new RuntimeException(s.toString());        }    }    public static final void validaCampoObligatorioNotEmptyMessage( String obj, String message ){        if( UtilString.coalesceTrim( obj ).isEmpty() ){            throw new RuntimeException( message );        }    }    // Constantes    public static final String ID_INVALIDO = "El id no es v치lido!";    public static final String ID_ESTRUCTURA_INICIAL_INVALIDO = "El id de la estructura inicial no es v치lido!";    public static final String ESTRUCTURA_INICIAL_ELIMINADA = "La estructura seleccionada esta eliminada!";    public static final String ID_VALORIZACION_INVALIDA = "Id Valorizaci칩n inv치lida!";    public static final String PROBLEMA_INTERNO = "Ocurrio un problema!, comuniquese con el administrador del sistema!";}