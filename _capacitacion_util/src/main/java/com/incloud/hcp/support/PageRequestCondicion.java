/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Source code: https://github.com/jaxio/celerio/
 * Follow us on twitter: @jaxiosoft
 * This header can be customized in Celerio conf...
 * Template pack-angular:src/main/java/dto/support/LazyLoadEvent.java.p.vm
 */
package com.incloud.hcp.support;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;

@Data
@ToString
@EqualsAndHashCode
public class PageRequestCondicion {

    /**
     * First row offset.
     */
    private int page;

    /**
     * Number of rows per page.
     */
    private int size;

    private String sortField;
    private int sortOrder = 1;

    public PageRequest toPageRequest() {
        if (sortField != null) {
            Sort.Direction direction = this.toSortDirection();
            Sort sort = Sort.by(direction, sortField);

            PageRequest pageRequest = PageRequest.of(this.page, this.size, sort);
            return pageRequest;
        }
        else {
            PageRequest pageRequest = PageRequest.of(this.page, this.size);
            return pageRequest;
        }
    }

    public Pageable toPageable() {
        if (sortField != null) {
            return PageRequest.of(toPageIndex(), size, toSortDirection(), sortField);
        } else {
            return PageRequest.of(toPageIndex(), size);
        }
    }

    public Pageable toPageable(Sort sortAvanzado) {
        return PageRequest.of(toPageIndex(), size, sortAvanzado);

    }

    /**
     * Zero based page index.
     */
    public int toPageIndex() {
        return (page + size) / size - 1;
    }

    public Sort.Direction toSortDirection() {
        return sortOrder == 1 ? Sort.Direction.ASC : Sort.Direction.DESC;
    }

}
