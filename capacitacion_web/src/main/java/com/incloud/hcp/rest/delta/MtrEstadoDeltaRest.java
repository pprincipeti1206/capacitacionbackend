/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/rest/EntitydeltaResource.java.e.vm
 */
package com.incloud.hcp.rest.delta;

import com.incloud.hcp.domain.MtrEstado;
import com.incloud.hcp.rest.MtrEstadoRest;
import com.incloud.hcp.service.delta.MtrEstadoDeltaService;
import com.incloud.hcp.util.Utils;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.net.URISyntaxException;
import java.util.List;
import java.util.Optional;

import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;

@RestController
@RequestMapping("/api/mtrEstado")
public class MtrEstadoDeltaRest extends MtrEstadoRest {

    @Autowired
    protected MtrEstadoDeltaService mtrEstadoDeltaService;

    @ApiOperation(value = "Listado Criterio Estado", produces = "application/json")
    @RequestMapping(value = "/listCriterioEstado", method = RequestMethod.POST, headers = "Accept=application/json")
    ResponseEntity<List<MtrEstado>> listCriterioEstado(@RequestBody MtrEstado estado)
            throws Exception {
        return Optional.of(new ResponseEntity<List<MtrEstado>>(
                mtrEstadoDeltaService.find(estado),
                HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NO_CONTENT));
    }

    @ApiOperation(value = "Devuelve lista de registros de Estados de Factura (Registrado)", produces = "application/json")
    @GetMapping(value = "/_findEstadoFacturaRegistrado", produces = APPLICATION_JSON_VALUE)
    public ResponseEntity<List<MtrEstado>> findEstadoFacturaRegistrado() throws URISyntaxException {
        log.debug(this.NOMBRE_CLASE + " - Ingresando findEstadoFacturaRegistrado");
        try {
            return Optional.ofNullable(this.mtrEstadoDeltaService.findEstadoFacturaRegistrado()).map(l -> new ResponseEntity<>(l, HttpStatus.OK))
                    .orElse(new ResponseEntity<>(HttpStatus.NO_CONTENT));
        }
        catch (Exception e) {
            if (this.devuelveRuntimeException) {
                String error = Utils.obtieneMensajeErrorExceptionDepurado(e);
                throw new RuntimeException(error);
            }
            HttpHeaders headers = this.devuelveErrorHeaders(e);
            return new ResponseEntity<>(headers, HttpStatus.BAD_REQUEST);
        }
    }

    @ApiOperation(value = "Devuelve lista de registros de Estados de Factura (Publicado)", produces = "application/json")
    @GetMapping(value = "/_findEstadoFacturaPublicado", produces = APPLICATION_JSON_VALUE)
    public ResponseEntity<List<MtrEstado>> findEstadoFacturaPublicado() throws URISyntaxException {
        log.debug(this.NOMBRE_CLASE + " - Ingresando findEstadoFacturaPublicado");
        try {
            return Optional.ofNullable(this.mtrEstadoDeltaService.findEstadoFacturaPublicado()).map(l -> new ResponseEntity<>(l, HttpStatus.OK))
                    .orElse(new ResponseEntity<>(HttpStatus.NO_CONTENT));
        }
        catch (Exception e) {
            if (this.devuelveRuntimeException) {
                String error = Utils.obtieneMensajeErrorExceptionDepurado(e);
                throw new RuntimeException(error);
            }
            HttpHeaders headers = this.devuelveErrorHeaders(e);
            return new ResponseEntity<>(headers, HttpStatus.BAD_REQUEST);
        }
    }


    @ApiOperation(value = "Devuelve lista de registros de Estados de Factura (CUPA)", produces = "application/json")
    @GetMapping(value = "/_findEstadoFacturaCupa", produces = APPLICATION_JSON_VALUE)
    public ResponseEntity<List<MtrEstado>> findEstadoFacturaCupa() throws URISyntaxException {
        log.debug(this.NOMBRE_CLASE + " - Ingresando findEstadoFacturaCupa");
        try {
            return Optional.ofNullable(this.mtrEstadoDeltaService.findEstadoFacturaCupa()).map(l -> new ResponseEntity<>(l, HttpStatus.OK))
                    .orElse(new ResponseEntity<>(HttpStatus.NO_CONTENT));
        }
        catch (Exception e) {
            if (this.devuelveRuntimeException) {
                String error = Utils.obtieneMensajeErrorExceptionDepurado(e);
                throw new RuntimeException(error);
            }
            HttpHeaders headers = this.devuelveErrorHeaders(e);
            return new ResponseEntity<>(headers, HttpStatus.BAD_REQUEST);
        }
    }
}
