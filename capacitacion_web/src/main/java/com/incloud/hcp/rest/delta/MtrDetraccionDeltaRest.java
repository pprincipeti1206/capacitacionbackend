/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/rest/EntitydeltaResource.java.e.vm
 */
package com.incloud.hcp.rest.delta;

import com.incloud.hcp.bean.custom.MensajeSap;
import com.incloud.hcp.bean.custom.RangeSap;
import com.incloud.hcp.repository.delta.MtrDetraccionDeltaRepository;
import com.incloud.hcp.rest.MtrDetraccionRest;
import com.incloud.hcp.service.delta.MtrDetraccionDeltaService;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/api/mtrDetraccion")
public class MtrDetraccionDeltaRest extends MtrDetraccionRest {

    @Autowired
    private MtrDetraccionDeltaRepository mtrDetraccionDeltaRepository;

    @Autowired
    private MtrDetraccionDeltaService mtrDetraccionDeltaService;

    @ApiOperation(value = "Integrar SAP y tabla detraccion", produces = "application/json")
    @RequestMapping(value = "/grabarDetraccion", method = RequestMethod.GET, headers = "Accept=application/json")
    public ResponseEntity<List<MensajeSap>> grabarDetraccion() throws Exception  {
        List<MensajeSap> lista = new ArrayList<MensajeSap>();
        List<RangeSap> listaRange = new ArrayList<RangeSap>();
        RangeSap rg = new RangeSap();
        rg.setSign("I");
        rg.setOption("EQ");
        rg.setLow("DE");

        listaRange.add(rg);

        RangeSap rg2 = new RangeSap();
        rg2.setSign("I");
        rg2.setOption("EQ");
        rg2.setLow("R1");

        listaRange.add(rg2);


        lista = this.mtrDetraccionDeltaService.actualizarDetraccion(listaRange);
        return Optional.of(lista)
                .map(l -> new ResponseEntity<>(l, HttpStatus.OK))
                .orElse(new ResponseEntity<>(HttpStatus.NO_CONTENT));

    }
}
