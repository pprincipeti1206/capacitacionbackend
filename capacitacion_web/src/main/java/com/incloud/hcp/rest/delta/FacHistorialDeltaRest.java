/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/rest/EntitydeltaResource.java.e.vm
 */
package com.incloud.hcp.rest.delta;

import com.incloud.hcp._security.SystemLoggedUser;
import com.incloud.hcp._security.UserSession;
import com.incloud.hcp.domain.FacHistorial;
import com.incloud.hcp.rest.FacHistorialRest;
import com.incloud.hcp.service.dto.FacturaHistorialDto;
import com.incloud.hcp.util.Utils;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.net.URISyntaxException;
import java.util.Optional;

@RestController
@RequestMapping("/api/facHistorial")
public class FacHistorialDeltaRest extends FacHistorialRest {

    @Autowired
    private SystemLoggedUser systemLoggedUser;


    @ApiOperation(value = "Agregar un nuevo registro en historial", produces = "application/json")
    @RequestMapping(value = "/addHistorial", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<FacHistorial> addHistorial(@RequestBody FacturaHistorialDto historial) throws URISyntaxException {

        log.error("Ingresando grabar registro historial: " + historial.toString());
        try {
            UserSession user = this.systemLoggedUser.getUserSession();
            return Optional.ofNullable(this.facHistorialDeltaService.addHistorial(historial, user))
                    .map(l -> new ResponseEntity<>(l, HttpStatus.OK))
                    .orElse(new ResponseEntity<>(HttpStatus.NO_CONTENT));


        } catch (Exception e) {
            String error = Utils.obtieneMensajeErrorException(e);
            throw new RuntimeException(error);
        }

    }

}
