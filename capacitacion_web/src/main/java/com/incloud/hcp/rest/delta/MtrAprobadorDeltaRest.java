/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/rest/EntitydeltaResource.java.e.vm
 */
package com.incloud.hcp.rest.delta;

import com.incloud.hcp.bean.custom.FiltroAprobadorCustom;
import com.incloud.hcp.bean.custom.MensajeSap;
import com.incloud.hcp.bean.custom.MtrAprobadorCustom;
import com.incloud.hcp.bean.custom.ReemplazoAprobadorCustom;
import com.incloud.hcp.repository.delta.CerCertificadoDeltaRepository;
import com.incloud.hcp.rest.MtrAprobadorRest;
import com.incloud.hcp.service.delta.MtrAprobadorDeltaService;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/api/mtrAprobador")
public class MtrAprobadorDeltaRest extends MtrAprobadorRest {

    private final Logger log = LoggerFactory.getLogger(MtrAprobadorDeltaRest.class);

    @Autowired
    protected CerCertificadoDeltaRepository cerCertificadoDeltaRepository;

    @Autowired
    protected MtrAprobadorDeltaService mtrAprobadorDeltaService;

    @ApiOperation(value = "Listado de aprobadores y sus reemplazos", produces = "application/json")
    @RequestMapping(value = "/listaAprobador", method = RequestMethod.POST, headers = "Accept=application/json")
    ResponseEntity<List<MtrAprobadorCustom>> listaAprobador(@RequestBody FiltroAprobadorCustom input)
            throws Exception {
        return Optional.of(new ResponseEntity<List<MtrAprobadorCustom>>(
                this.mtrAprobadorDeltaService.listaAprobador(input),
                HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NO_CONTENT));
    }

    @ApiOperation(value = "Grabar aprobador y sus reemplazantes", produces = "application/json")
    @RequestMapping(value = "/grabarReemplazo", method = RequestMethod.POST, headers = "Accept=application/json")
    ResponseEntity<List<MensajeSap>> grabarReemplazo(@RequestBody ReemplazoAprobadorCustom input)
            throws Exception {
        return Optional.of(new ResponseEntity<List<MensajeSap>>(
                this.mtrAprobadorDeltaService.grabarReemplazo(input),
                HttpStatus.OK)).orElse(new ResponseEntity<>(HttpStatus.NO_CONTENT));
    }

}
