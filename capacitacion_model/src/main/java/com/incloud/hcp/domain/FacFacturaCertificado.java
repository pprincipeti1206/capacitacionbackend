/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.incloud.hcp.domain;

import com.google.common.base.MoreObjects;
import org.hibernate.validator.constraints.NotEmpty;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.logging.Logger;

import static javax.persistence.GenerationType.SEQUENCE;

@Entity
@Table(name = "fac_factura_certificado", uniqueConstraints = {
        @UniqueConstraint(name = "fac_factura_certificado_ak01", columnNames = { "fac_factura_id", "cer_certificado_id" }) })
//@Audited
//@AuditTable("_audi_fac_factura_certificado")
public class FacFacturaCertificado extends BaseDomain implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(FacFacturaCertificado.class.getName());

    /***************************/
    /* Atributos de la Entidad */
    /***************************/

    // Raw attributes
    private Integer id;
    private String estado;

    // Many to one
    private CerCertificado cerCertificado;
    private FacFactura facFactura;

    @Override
    public String entityClassName() {
        return FacFacturaCertificado.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "fac_factura_certificado_id", precision = 10)
    @GeneratedValue(strategy = SEQUENCE, generator = "seq_fac_factura_certificado")
    @Id
    @SequenceGenerator(name = "seq_fac_factura_certificado", sequenceName = "seq_fac_factura_certificado", allocationSize = 1)
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public FacFacturaCertificado id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [estado] ------------------------

    @NotEmpty(message = "{message.facFacturaCertificado.estado.requerido}")
    @Size(max = 1, message = "{message.facFacturaCertificado.estado.sizeMax} {max} {message.caracter}")
    @Column(name = "estado", nullable = false, length = 1)
    public String getEstado() {
        return estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    public FacFacturaCertificado estado(String estado) {
        setEstado(estado);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: FacFacturaCertificado.cerCertificado ==> CerCertificado.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "cer_certificado_id", nullable = false)
    @ManyToOne
    public CerCertificado getCerCertificado() {
        return cerCertificado;
    }

    /**
     * Set the {@link #cerCertificado} without adding this FacFacturaCertificado instance on the passed {@link #cerCertificado}
     */
    public void setCerCertificado(CerCertificado cerCertificado) {
        this.cerCertificado = cerCertificado;
    }

    public FacFacturaCertificado cerCertificado(CerCertificado cerCertificado) {
        setCerCertificado(cerCertificado);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: FacFacturaCertificado.facFactura ==> FacFactura.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "fac_factura_id", nullable = false)
    @ManyToOne
    public FacFactura getFacFactura() {
        return facFactura;
    }

    /**
     * Set the {@link #facFactura} without adding this FacFacturaCertificado instance on the passed {@link #facFactura}
     */
    public void setFacFactura(FacFactura facFactura) {
        this.facFactura = facFactura;
    }

    public FacFacturaCertificado facFactura(FacFactura facFactura) {
        setFacFactura(facFactura);
        return this;
    }

    /**
     * Apply the default values.
     */
    public FacFacturaCertificado withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof FacFacturaCertificado && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this FacFacturaCertificado instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("facFactura", getFacFactura()) //    
                .add("cerCertificado", getCerCertificado()) //    
                .add("estado", getEstado()) //
                .toString();
    }
}
