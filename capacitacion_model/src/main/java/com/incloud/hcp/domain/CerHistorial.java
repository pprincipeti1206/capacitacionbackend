/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.incloud.hcp.domain;

import com.fasterxml.jackson.annotation.JsonFormat;
import org.hibernate.validator.constraints.NotEmpty;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.logging.Logger;

import static javax.persistence.GenerationType.SEQUENCE;
import static javax.persistence.TemporalType.TIMESTAMP;

@Entity
@Table(name = "cer_historial")
//@Audited
//@AuditTable("_audi_cer_historial")
public class CerHistorial extends BaseDomain implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(CerHistorial.class.getName());

    /***************************/
    /* Atributos de la Entidad */
    /***************************/

    // Raw attributes
    private Integer id;
    private String descripcion;
    private String usuarioHistoral;
    private Date fechaHistorial;
    private String nroDocumentoSapAsociado;
    private String indSgmm;

    //Transient
    private String fechaHistorialString;

    // Many to one
    private MtrEstado mtrEstado;
    private CerCertificado cerCertificado;


    @Transient
    public String getFechaHistorialString() {
        return fechaHistorialString;
    }

    public void setFechaHistorialString(String fechaHistorialString) {
        this.fechaHistorialString = fechaHistorialString;
    }

    @Override
    public String entityClassName() {
        return CerHistorial.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "cer_historial_id", precision = 10)
    @GeneratedValue(strategy = SEQUENCE, generator = "seq_cer_historial")
    @Id
    @SequenceGenerator(name = "seq_cer_historial", sequenceName = "seq_cer_historial", allocationSize = 1)
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public CerHistorial id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [descripcion] ------------------------

    @Size(max = 4000, message = "{message.cerHistorial.descripcion.sizeMax} {max} {message.caracter}")
    @Column(name = "descripcion", length = 4000)
    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public CerHistorial descripcion(String descripcion) {
        setDescripcion(descripcion);
        return this;
    }
    // -- [usuarioHistoral] ------------------------

    @NotEmpty(message = "{message.cerHistorial.usuarioHistoral.requerido}")
    @Size(max = 100, message = "{message.cerHistorial.usuarioHistoral.sizeMax} {max} {message.caracter}")
    @Column(name = "usuario_historal", nullable = false, length = 100)
    public String getUsuarioHistoral() {
        return usuarioHistoral;
    }

    public void setUsuarioHistoral(String usuarioHistoral) {
        this.usuarioHistoral = usuarioHistoral;
    }

    public CerHistorial usuarioHistoral(String usuarioHistoral) {
        setUsuarioHistoral(usuarioHistoral);
        return this;
    }
    // -- [fechaHistorial] ------------------------

    @NotNull
    @Column(name = "fecha_historial", nullable = false, length = 29)
    @Temporal(TIMESTAMP)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy HH:mm:ss")
    public Date getFechaHistorial() {
        return fechaHistorial;
    }

    public void setFechaHistorial(Date fechaHistorial) {
        this.fechaHistorial = fechaHistorial;
    }

    public CerHistorial fechaHistorial(Date fechaHistorial) {
        setFechaHistorial(fechaHistorial);
        return this;
    }
    // -- [nroDocumentoSapAsociado] ------------------------

    @Size(max = 200, message = "{message.cerHistorial.nroDocumentoSapAsociado.sizeMax} {max} {message.caracter}")
    @Column(name = "nro_documento_sap_asociado", length = 200)
    public String getNroDocumentoSapAsociado() {
        return nroDocumentoSapAsociado;
    }

    public void setNroDocumentoSapAsociado(String nroDocumentoSapAsociado) {
        this.nroDocumentoSapAsociado = nroDocumentoSapAsociado;
    }

    public CerHistorial nroDocumentoSapAsociado(String nroDocumentoSapAsociado) {
        setNroDocumentoSapAsociado(nroDocumentoSapAsociado);
        return this;
    }

    // -- [indSgmm] ------------------------

    @Size(max = 1, message = "{message.cerHistorial.indSgmm.sizeMax} {max} {message.caracter}")
    @Column(name = "ind_sgmm", length = 1)
    public String getIndSgmm() {
        return indSgmm;
    }

    public void setIndSgmm(String indSgmm) {
        this.indSgmm = indSgmm;
    }

    public CerHistorial indSgmm(String indSgmm) {
        setIndSgmm(indSgmm);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: CerHistorial.mtrEstado ==> MtrEstado.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "mtr_estado_id", nullable = false)
    @ManyToOne
    public MtrEstado getMtrEstado() {
        return mtrEstado;
    }

    /**
     * Set the {@link #mtrEstado} without adding this CerHistorial instance on the passed {@link #mtrEstado}
     */
    public void setMtrEstado(MtrEstado mtrEstado) {
        this.mtrEstado = mtrEstado;
    }

    public CerHistorial mtrEstado(MtrEstado mtrEstado) {
        setMtrEstado(mtrEstado);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: CerHistorial.cerCertificado ==> CerCertificado.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "cer_certificado_id", nullable = false)
    @ManyToOne
    public CerCertificado getCerCertificado() {
        return cerCertificado;
    }

    /**
     * Set the {@link #cerCertificado} without adding this CerHistorial instance on the passed {@link #cerCertificado}
     */
    public void setCerCertificado(CerCertificado cerCertificado) {
        this.cerCertificado = cerCertificado;
    }

    public CerHistorial cerCertificado(CerCertificado cerCertificado) {
        setCerCertificado(cerCertificado);
        return this;
    }

    /**
     * Apply the default values.
     */
    public CerHistorial withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof CerHistorial && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    @Override
    public String toString() {
        return "CerHistorial{" +
                "id=" + id +
                ", descripcion='" + descripcion + '\'' +
                ", usuarioHistoral='" + usuarioHistoral + '\'' +
                ", fechaHistorial=" + fechaHistorial +
                ", nroDocumentoSapAsociado='" + nroDocumentoSapAsociado + '\'' +
                ", indSgmm='" + indSgmm + '\'' +
                ", fechaHistorialString='" + fechaHistorialString + '\'' +
                ", mtrEstado=" + mtrEstado +
                ", cerCertificado=" + cerCertificado +
                ", identifiableHashBuilder=" + identifiableHashBuilder +
                '}';
    }
}
