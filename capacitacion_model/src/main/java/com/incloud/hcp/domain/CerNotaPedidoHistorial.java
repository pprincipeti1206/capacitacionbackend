/*
 * Project home: https://github.com/jaxio/celerio-angular-quickstart
 * 
 * Source code generated by Celerio, an Open Source code generator by Jaxio.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Modificado por CARLOS BAZALAR
 * Email: cbazalarlarosa@gmail.com
 * Template pack-angular:src/main/java/domain/Entity.java.e.vm
 */
package com.incloud.hcp.domain;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.google.common.base.MoreObjects;
import org.hibernate.validator.constraints.NotEmpty;

import javax.persistence.*;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.logging.Logger;

import static javax.persistence.GenerationType.SEQUENCE;
import static javax.persistence.TemporalType.TIMESTAMP;

@Entity
@Table(name = "cer_nota_pedido_historial")
//@Audited
//@AuditTable("_audi_cer_nota_pedido_historial")
public class CerNotaPedidoHistorial extends BaseDomain implements Identifiable<Integer>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = Logger.getLogger(CerNotaPedidoHistorial.class.getName());

    /***************************/
    /* Atributos de la Entidad */
    /***************************/

    // Raw attributes
    private Integer id;
    private String descripcion;
    private String usuarioHistoral;
    private Date fechaHistorial;
    private Date fechaFinVigencia;
    private Integer plazo;

    // Many to one
    private CerNotaPedido cerNotaPedido;
    private MtrEstado mtrEstado;

    @Override
    public String entityClassName() {
        return CerNotaPedidoHistorial.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "cer_nota_pedido_historial_id", precision = 10)
    @GeneratedValue(strategy = SEQUENCE, generator = "seq_cer_nota_pedido_historial")
    @Id
    @SequenceGenerator(name = "seq_cer_nota_pedido_historial", sequenceName = "seq_cer_nota_pedido_historial", allocationSize = 1)
    public Integer getId() {
        return id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    public CerNotaPedidoHistorial id(Integer id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    public boolean isIdSet() {
        return id != null;
    }
    // -- [descripcion] ------------------------

    @Size(max = 4000, message = "{message.cerNotaPedidoHistorial.descripcion.sizeMax} {max} {message.caracter}")
    @Column(name = "descripcion", length = 4000)
    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public CerNotaPedidoHistorial descripcion(String descripcion) {
        setDescripcion(descripcion);
        return this;
    }
    // -- [usuarioHistoral] ------------------------

    @NotEmpty(message = "{message.cerNotaPedidoHistorial.usuarioHistoral.requerido}")
    @Size(max = 1000, message = "{message.cerNotaPedidoHistorial.usuarioHistoral.sizeMax} {max} {message.caracter}")
    @Column(name = "usuario_historal", nullable = false, length = 1000)
    public String getUsuarioHistoral() {
        return usuarioHistoral;
    }

    public void setUsuarioHistoral(String usuarioHistoral) {
        this.usuarioHistoral = usuarioHistoral;
    }

    public CerNotaPedidoHistorial usuarioHistoral(String usuarioHistoral) {
        setUsuarioHistoral(usuarioHistoral);
        return this;
    }
    // -- [fechaHistorial] ------------------------

    @NotNull
    @Column(name = "fecha_historial", nullable = false, length = 29)

    @Temporal(TIMESTAMP)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy")
    public Date getFechaHistorial() {
        return fechaHistorial;
    }

    public void setFechaHistorial(Date fechaHistorial) {
        this.fechaHistorial = fechaHistorial;
    }

    public CerNotaPedidoHistorial fechaHistorial(Date fechaHistorial) {
        setFechaHistorial(fechaHistorial);
        return this;
    }
    // -- [fechaFinVigencia] ------------------------

    @Column(name = "fecha_fin_vigencia", length = 29)

    @Temporal(TIMESTAMP)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy")
    public Date getFechaFinVigencia() {
        return fechaFinVigencia;
    }

    public void setFechaFinVigencia(Date fechaFinVigencia) {
        this.fechaFinVigencia = fechaFinVigencia;
    }

    public CerNotaPedidoHistorial fechaFinVigencia(Date fechaFinVigencia) {
        setFechaFinVigencia(fechaFinVigencia);
        return this;
    }
    // -- [plazo] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "plazo", precision = 10)
    public Integer getPlazo() {
        return plazo;
    }

    public void setPlazo(Integer plazo) {
        this.plazo = plazo;
    }

    public CerNotaPedidoHistorial plazo(Integer plazo) {
        setPlazo(plazo);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: CerNotaPedidoHistorial.cerNotaPedido ==> CerNotaPedido.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "cer_nota_pedido_id", nullable = false)
    @ManyToOne
    public CerNotaPedido getCerNotaPedido() {
        return cerNotaPedido;
    }

    /**
     * Set the {@link #cerNotaPedido} without adding this CerNotaPedidoHistorial instance on the passed {@link #cerNotaPedido}
     */
    public void setCerNotaPedido(CerNotaPedido cerNotaPedido) {
        this.cerNotaPedido = cerNotaPedido;
    }

    public CerNotaPedidoHistorial cerNotaPedido(CerNotaPedido cerNotaPedido) {
        setCerNotaPedido(cerNotaPedido);
        return this;
    }

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: CerNotaPedidoHistorial.mtrEstado ==> MtrEstado.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @NotNull
    @JoinColumn(name = "mtr_estado_id", nullable = false)
    @ManyToOne
    public MtrEstado getMtrEstado() {
        return mtrEstado;
    }

    /**
     * Set the {@link #mtrEstado} without adding this CerNotaPedidoHistorial instance on the passed {@link #mtrEstado}
     */
    public void setMtrEstado(MtrEstado mtrEstado) {
        this.mtrEstado = mtrEstado;
    }

    public CerNotaPedidoHistorial mtrEstado(MtrEstado mtrEstado) {
        setMtrEstado(mtrEstado);
        return this;
    }

    /**
     * Apply the default values.
     */
    public CerNotaPedidoHistorial withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof CerNotaPedidoHistorial && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this CerNotaPedidoHistorial instance.
     * @see Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("cerNotaPedido", getCerNotaPedido()) //    
                .add("descripcion", getDescripcion()) //
                .add("usuarioHistoral", getUsuarioHistoral()) //
                .add("fechaHistorial", getFechaHistorial()) //
                .add("mtrEstado", getMtrEstado()) //    
                .add("fechaFinVigencia", getFechaFinVigencia()) //
                .add("plazo", getPlazo()) //
                .toString();
    }
}
